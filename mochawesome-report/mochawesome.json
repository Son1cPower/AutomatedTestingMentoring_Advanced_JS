{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 9,
    "pending": 1,
    "failures": 0,
    "start": "2023-06-01T12:19:19.320Z",
    "end": "2023-06-01T12:19:19.768Z",
    "duration": 448,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 10,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "de79801f-5f12-48dd-8f4c-5ef6c3a29d08",
      "title": "",
      "fullFile": "C:\\Users\\Stanislav_Nehrii\\Desktop\\AutomatedTestingMentoring_Advanced_JS\\src\\testsAPI\\test.spec.js",
      "file": "\\src\\testsAPI\\test.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5013a01d-a44d-49ad-ba9e-b8f7f7ced9d1",
          "title": "API Test Suite",
          "fullFile": "C:\\Users\\Stanislav_Nehrii\\Desktop\\AutomatedTestingMentoring_Advanced_JS\\src\\testsAPI\\test.spec.js",
          "file": "\\src\\testsAPI\\test.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[GET POSITIVE] Get list of project launches",
              "fullTitle": "API Test Suite [GET POSITIVE] Get list of project launches",
              "timedOut": false,
              "duration": 71,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await sendRequest('project_js/launch');\nexpect(response.status).to.equal(200);\nexpect(response.data.page.totalElements).to.equal(5);\nconst launchIds = response.data.content.map((launch) => launch.id);\nconst expectedIds = testData.map((data) => Number(data.launchesID))\nexpect(launchIds).to.deep.equal(expectedIds);",
              "err": {},
              "uuid": "362c13a8-01c0-4117-a5ec-56dfec07e19d",
              "parentUUID": "5013a01d-a44d-49ad-ba9e-b8f7f7ced9d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[GET NEGATIVE] Get list of project launches for incorect project name",
              "fullTitle": "API Test Suite [GET NEGATIVE] Get list of project launches for incorect project name",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await sendRequest('NEWproject_js/launch');\nexpect(response.status).to.equal(403);\nexpect(response.data.errorCode).to.equal(4003);\nexpect(response.data.message).to.equal('You do not have enough permissions. Please check the list of your available projects.');",
              "err": {},
              "uuid": "b96610d1-970e-4bf6-b596-bb15ccd3755d",
              "parentUUID": "5013a01d-a44d-49ad-ba9e-b8f7f7ced9d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[POST NEGATIVE_1] Merge set of incorect launches in common one",
              "fullTitle": "API Test Suite [POST NEGATIVE_1] Merge set of incorect launches in common one",
              "timedOut": false,
              "duration": 63,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const body = {\n  \"launches\": [1, 2],\n  \"mergeType\": \"standart\",\n  \"name\": \"New Merge\"\n}\nresponse = await sendRequest('project_js/launch/merge ', 'post', body);\nexpect(response.status).to.equal(406);\nexpect(response.data.errorCode).to.equal(40033);\nexpect(response.data.message).to.equal(\"Merge Strategy type null is unsupported\");\nresponse = await sendRequest('stanislav_nehrii_personal/launch');",
              "err": {},
              "uuid": "7f6ff301-dc8f-4510-9102-eb54f1511875",
              "parentUUID": "5013a01d-a44d-49ad-ba9e-b8f7f7ced9d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[POST NEGATIVE_2] Merge set of incorect launches in common one",
              "fullTitle": "API Test Suite [POST NEGATIVE_2] Merge set of incorect launches in common one",
              "timedOut": false,
              "duration": 41,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const body = {\n  \"launches\": [1111, 2222],\n  \"mergeType\": \"DEEP\",\n  \"name\": \"New Merge\"\n}\nresponse = await sendRequest('stanislav_nehrii_personal/launch/merge ', 'post', body);\nexpect(response.status).to.equal(400);\nexpect(response.data.errorCode).to.equal(40016);\nexpect(response.data.message).to.equal(\"Error in handled Request. Please, check specified parameters: 'Not all launches with provided ids were found'\");\nresponse = await sendRequest('stanislav_nehrii_personal/launch');\nconst launchIds = response.data.content.map((launch) => launch.id);\nexpect(launchIds).not.to.deep.contain(1111, 2222);",
              "err": {},
              "uuid": "c50eaf32-b94a-42e0-8ccc-d94c0488a083",
              "parentUUID": "5013a01d-a44d-49ad-ba9e-b8f7f7ced9d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[POST POSITIVE] Deep Merge set of specified launches in common one",
              "fullTitle": "API Test Suite [POST POSITIVE] Deep Merge set of specified launches in common one",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "2ea3d18d-3ced-465a-878a-a7aeec5946fb",
              "parentUUID": "5013a01d-a44d-49ad-ba9e-b8f7f7ced9d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[PUT POSITIVE] Bulk added attributes",
              "fullTitle": "API Test Suite [PUT POSITIVE] Bulk added attributes",
              "timedOut": false,
              "duration": 41,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const body = {\n  \"attributes\": [\n    {\n      \"action\": \"CREATE\",\n      \"from\": {\n        \"key\": \"os\",\n        \"value\": \"Android\"\n      },\n      \"to\": {\n        \"key\": \"demo\",\n        \"value\": \"MacOS\"\n      }\n    }],\n  \"ids\": [6]\n}\nresponse = await sendRequest('stanislav_nehrii_personal/launch/info ', 'put', body);\nexpect(response.status).to.equal(200);\nresponse = await sendRequest('stanislav_nehrii_personal/launch');\nawait expect(response.data.content.find(elem => elem.id === 6).attributes.some(elem => elem.key === `demo` && elem.value === `MacOS`)).to.be.true;",
              "err": {},
              "uuid": "925acc02-319f-4800-bb5c-7c82a9432a47",
              "parentUUID": "5013a01d-a44d-49ad-ba9e-b8f7f7ced9d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[PUT NEGATIVE_1] Bulk added attributes",
              "fullTitle": "API Test Suite [PUT NEGATIVE_1] Bulk added attributes",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const body = {\n  \"attributes\": [\n    {\n      \"action\": \"CREATE\",\n      \"from\": {\n        \"key\": \"os\",\n        \"value\": \"Android\"\n      },\n      \"to\": {\n        \"key\": \"demo\",\n        \"value\": \"MacOS\"\n      }\n    }],\n}\nresponse = await sendRequest('stanislav_nehrii_personal/launch/info ', 'put', body);\nexpect(response.status).to.equal(400);\nexpect(response.data.errorCode).to.equal(4001);\nexpect(response.data.message).to.equal(\"Incorrect Request. [Field 'ids' should not be null.] \");",
              "err": {},
              "uuid": "85b2809d-08b3-4b86-9a64-31dcba9e8352",
              "parentUUID": "5013a01d-a44d-49ad-ba9e-b8f7f7ced9d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[PUT NEGATIVE_2] Bulk added attributes",
              "fullTitle": "API Test Suite [PUT NEGATIVE_2] Bulk added attributes",
              "timedOut": false,
              "duration": 22,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const body = {\n  \"attributes\": [\n    {\n      \"to\": {\n        \"key\": \"demo\",\n        \"value\": \"demo\"\n      }\n    }],\n  \"ids\": [1]\n}\nresponse = await sendRequest('stanislav_nehrii_personal/launch/info ', 'put', body);\nexpect(response.status).to.equal(500);\nexpect(response.data.errorCode).to.equal(5000);\nexpect(response.data.message).to.equal(\"Unclassified error [null]\");",
              "err": {},
              "uuid": "b96b5386-d045-4591-9c48-3ec92b0929b6",
              "parentUUID": "5013a01d-a44d-49ad-ba9e-b8f7f7ced9d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[DELETE NEGATIVE] Delete specified launches by id",
              "fullTitle": "API Test Suite [DELETE NEGATIVE] Delete specified launches by id",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const body = {\n  \"ids\": [555]\n}\nresponse = await sendRequest('stanislav_nehrii_personal/launch ', 'delete', body);\nexpect(response.status).to.equal(200);\nexpect(response.data.successfullyDeleted.length).to.equal(0);\nexpect(response.data.errors.length).to.equal(0);\nexpect(response.data.notFound).to.deep.equal(body.ids);",
              "err": {},
              "uuid": "f49042a2-0b7f-4a6e-9c39-b94ee254b9e8",
              "parentUUID": "5013a01d-a44d-49ad-ba9e-b8f7f7ced9d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[DELETE POSITIVE] Delete specified launches by id",
              "fullTitle": "API Test Suite [DELETE POSITIVE] Delete specified launches by id",
              "timedOut": false,
              "duration": 149,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const body = {\n  \"ids\": [9]\n}\nresponse = await sendRequest('stanislav_nehrii_personal/launch ', 'delete', body);\nexpect(response.status).to.equal(200);\nexpect(response.data.successfullyDeleted).to.deep.equal(body.ids);\nexpect(response.data.errors.length).to.equal(0);\nexpect(response.data.notFound.length).to.equal(0);\nresponse = await sendRequest('stanislav_nehrii_personal/launch');\nconst launchIds = response.data.content.map((launch) => launch.id);\nexpect(body.ids.every(value => !launchIds.includes(value))).is.true",
              "err": {},
              "uuid": "4316113f-e834-4048-a557-7c5724d27144",
              "parentUUID": "5013a01d-a44d-49ad-ba9e-b8f7f7ced9d1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "362c13a8-01c0-4117-a5ec-56dfec07e19d",
            "b96610d1-970e-4bf6-b596-bb15ccd3755d",
            "7f6ff301-dc8f-4510-9102-eb54f1511875",
            "c50eaf32-b94a-42e0-8ccc-d94c0488a083",
            "925acc02-319f-4800-bb5c-7c82a9432a47",
            "85b2809d-08b3-4b86-9a64-31dcba9e8352",
            "b96b5386-d045-4591-9c48-3ec92b0929b6",
            "f49042a2-0b7f-4a6e-9c39-b94ee254b9e8",
            "4316113f-e834-4048-a557-7c5724d27144"
          ],
          "failures": [],
          "pending": [
            "2ea3d18d-3ced-465a-878a-a7aeec5946fb"
          ],
          "skipped": [],
          "duration": 429,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}